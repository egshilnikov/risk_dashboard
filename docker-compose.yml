version: "3.9"

services:
  api:
    build: .
    container_name: risk_api
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - mongo
      - redis

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongo:
    image: mongo:6.0
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  redis:
    image: redis:7
    container_name: redis_broker
    restart: always
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A tasks.worker worker --loglevel=info
    working_dir: /app
    volumes:
      - ./src:/app
    depends_on:
      - redis
      - api
    env_file:
      - .env

  streamlit:
    build: .
    container_name: streamlit_ui
    working_dir: /app
    command: streamlit run /app/dashboard.py --server.port=8501 --server.address=0.0.0.0
    volumes:
      - ./streamlit:/app
    ports:
      - "8501:8501"
    env_file:
      - .env
    depends_on:
      - api      
    
volumes:
  pgdata:
  mongodata: